@Library("utils@main") _
pipeline {
    agent any
    environment {
        GIT_COMMIT_AUTHOR = sh(script: "git --no-pager show -s --format=%an ${env.GIT_COMMIT}", returnStdout: true, label: "Git commit author").trim();
        GIT_COMMIT_AUTHOR_EMAIL = sh(script: "git --no-pager show -s --format=%ae ${env.GIT_COMMIT}", returnStdout: true, label: "Git commit author email").trim();
        GIT_COMMIT_MESSAGE = sh(script: "git --no-pager show -s --format=%B ${env.GIT_COMMIT}", returnStdout: true, label: "Git commit message").trim();
        STAGE1 = "First"
        STAGE2 = "Second"

    }
    stages {
        stage(STAGE1) {
            steps {
                echo "First Stage"
            }
            post {
                always {
                    script {
                        sendNotification(STAGE1)
                    }
                }
            }
        }
        stage(STAGE2) {
            steps {
                echo "Second Stage"
            }
            post {
                always {
                    script {
                        sendNotification(STAGE2)
                    }
                }
            }
        }
    }
}

